<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Github 与 Hexo 搭建博客步骤（使用 Next 主题）]]></title>
      <url>%2F2016%2F11%2F11%2FGithub%E4%B8%8Ehexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%AD%A5%E9%AA%A4%2F</url>
      <content type="text"><![CDATA[1. 安装前的准备Hexo 是一个快速简单并且强大的博客框架，使用者可以使用 markdown 语法编写文章，然后通过 hexo 生成带有主题的静态文件，并上传到 github，生成的 html 文件可以在浏览器上访问。本安装教程是在 ubuntu 平台上进行的，其他平台请另寻他处。安装前 Hexo 前需要先安装 Node.js 和 Git，在后面会描述其安装过程。 2. 安装 Git使用如下命令安装 Git，在这之后可以先了解 git 简单命令的使用，推荐：廖雪峰的Git教程。 1$ sudo apt-get install git-core 3. 安装 Node.js我们可以使用 nvm 来安装 Node.js ，方法如下：1curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh 或1$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh 安装完 nvm 之后重启窗口安装 Node.js：1$ nvm install stable 如果不想使用命令安装可以直接下载 Node.js 的安装包安装。下载完 linux 下的压缩包后，将其复制到 /usr/local 目录下，并使用 tar -xvJf + 文件名，对压缩包进行解压，更改解压后的文件夹的权限为755。修改环境变量，使用 vim 修改 /etc/profile，在文件末尾添加两行：123# node.jsexport NODE=/usr/local/node-v6.9.1-linux-x64export PATH=$&#123;NODE&#125;/bin:$PATH 之后执行命令 source /etc/profile，使用 node -v 命令查看版本号。 4. 安装 Hexo使用 npm 安装 hexo：1234$ sudo apt-get install npm$ sudo apt-get update$ sudo apt-get install nodejs-legacy$ sudo npm install -g hexo-cli 经过一段时间的等待，会在终端显示如下树状结果，hexo 安装完毕。 当 hexo 安装完毕，使用如下命令初始化 hexo 目录并安装依赖，生成的目录在当前所在的目录之下。123$ hexo init &lt;folder&gt; # 初始化 hexo 并创建目录$ cd &lt;folder&gt; # 切换到目录之下$ npm install # 安装依赖包 hexo 常用命令：1234$ hexo g #完整命令为hexo generate，用于生成静态文件$ hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览$ hexo d #完整命令为hexo deploy，用于将本地文件发布到github上$ hexo n #完整命令为hexo new，用于新建一篇文章 在本地开启博客，用浏览器访问 http://localhost:4000/：12$ hexo g$ hexo s 5. 注册 Github 并创建 repository到 Github 官网注册 Github 账号，登录进入个人主页选择 Repositories，再点击旁边的 NEW 按钮创建新的 repository，名字的格式必须为 name.github.io，例如：windows7lake.github.io。 6. hexo 的配置整个博客的配置文件，位于 hexo\_config.yml，通过它，我们可以对整个博客进行配置。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Lio's Blog # 网站即博客的标题subtitle: No pains no gains! # 博客的副标题description: No pains no gains, Believes oneself, Nothing impossible! # 博客的描述author: Lio Lin # 作者language: zh-CN # 语言timezone:# URL 设置自己的域名## If your site is put in a subdirectory,## set url as 'http://yoursite.com/child' and root as '/child/'url: http://yoursite.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # 新创建的文章的默认文件名default_layout: post titlecase: false # 将标题转换为标题大小写external_link: true # 在新的标签中打开外部连接filename_case: 0 # 0 为默认; 1 为小写; 2 为大写render_drafts: false # 是否显示草稿post_asset_folder: falserelative_link: false # 是否创建相对于根文件夹的链接future: truehighlight: # 代码块设置 enable: true line_number: true auto_detect: false tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format 时间格式## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10 # 每页显示的文章数，0 表示不分页pagination_dir: page # 分页目录# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: landscape # 主题名# Deployment 部署到 github 的配置## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/windows7lake/windows7lake.github.io branch: master 使用如下命令克隆 Next 主题到我们的本地博客之下：12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 主题的配置文件，位于 hexo\theme\主题名\_config.yml，对主题的设置。这里对主题的配置可以参考 NexT 官网。 7. 将本地 Hexo 发布到 Github在本地创建 ssh key：1$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; 后面的 your_email@youremail.com 改为自己的邮箱，之后会要求确认路径和输入密码，一路回车就行。成功的话会在 ~/ 下生成 .ssh 文件夹，进去，打开 id_rsa.pub，复制里面的 key。 回到 github，进入 Settings，选择 SSH and GPG Keys -&gt; New SSH Key，title 随便填，粘贴 key。为了验证是否成功，输入：1$ ssh -T git@github.com 如果是第一次的会提示是否 continue，输入 yes 就会看到：You’ve successfully authenticated， but GitHub does not provide shell access ，这就表示已成功连上 github。 接下来我们要做的就是把本地仓库传到 github 上去，在此之前还需要设置 username 和 email，因为 github 每次 commit 都会记录他们。12$ git config --global user.name &quot;your name&quot; $ git config --global user.email &quot;your_email@youremail.com&quot; 发布本地博客内容到 Github，需切换到博客目录下，执行如下两条命令，执行如下的第二个命令，可能会要你输入用户名和密码，皆为注册 Github 时的数据，输入密码是不显示任何东西的，输入完毕回车即可。12$ hexo g$ hexo d 如果输入 hexo d 后遇到 ERROR Deployer not found: Git，则使用命令 npm install hexo-deployer-git –save 即可。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F11%2F11%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
